#!/usr/bin/env bash
# Exit early if not in an interactive shell
[[ $- != *i* ]] && return

# Get the directory of the current script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Read emojis from a single-line, whitespace-separated file
read -ra EMOJIS <<< "$(cat "${SCRIPT_DIR}/emoticons")"

# Function to select a random emoji
RANDOM_EMOJI() {
  echo "${EMOJIS[RANDOM % ${#EMOJIS[@]}]}"
}

# ANSI 256 color escapes (properly wrapped in \[ \] for prompt alignment)
BRACKET_COLOR="\[\033[38;5;35m\]"
CLOCK_COLOR="\[\033[38;5;35m\]"
JOB_COLOR="\[\033[38;5;33m\]"
PATH_COLOR="\[\033[38;5;33m\]"
LINE_COLOR="\[\033[38;5;248m\]"
RESET_COLOR="\[\033[0m\]"

# Line characters (UTF-8)
LINE_BOTTOM="─"
LINE_BOTTOM_CORNER="└"
LINE_UPPER_CORNER="┌"
LINE_STRAIGHT="─"

# Misc symbols
END_CHARACTER="|"
WHITE_SPACE=" "
HASH="#"

# Prompt update function
set_prompt() {
  local emoji exit_code_symbol=""
  local last_code=$?

  [[ $last_code -ne 0 ]] && exit_code_symbol="❌($last_code) "
  emoji="$(RANDOM_EMOJI)"

  PS1="$CLOCK_COLOR\t$WHITE_SPACE"
  PS1+="$BRACKET_COLOR[$JOB_COLOR\j$BRACKET_COLOR]$WHITE_SPACE"
  PS1+="$exit_code_symbol\H: $PATH_COLOR\w$RESET_COLOR$WHITE_SPACE\[$emoji\]\n"
  PS1+="$END_CHARACTER$RESET_COLOR$HASH$WHITE_SPACE"
}

# Set the prompt before each command
PROMPT_COMMAND="set_prompt"
